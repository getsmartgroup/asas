import { jsx as _jsx } from "react/jsx-runtime";
import { useState, useCallback, useMemo } from 'react';
import { createContext } from '@chakra-ui/react-utils';
import { safeReplaceAsync } from '@asas/client';
export const createServiceContext = (service) => {
    const [ContextProvider, useContext] = createContext({
        name: `Context`,
        errorMessage: `useContext: \`context\` is undefined. Seems you forgot to wrap the select components in \`<Provider />\``
    });
    const Provider = (({ children }) => {
        const ctx = useWrappedService(service);
        return _jsx(ContextProvider, Object.assign({ value: ctx }, { children: children }), void 0);
    });
    return {
        Provider,
        ContextProvider,
        service,
        useContext
    };
};
export const useWrappedService = (service) => {
    let [loading, _setLoading] = useState(false);
    const setLoading = useMemo(() => ({
        on: () => _setLoading(true),
        off: () => _setLoading(false)
    }), [loading, _setLoading]);
    const [index, setIndex] = useState(service.cache);
    const array = useMemo(() => Object.values(index), [index]);
    const [errors, setErrors] = useState([]);
    const sync = useCallback((someData) => {
        setIndex(Object.assign({}, service.cache));
        return someData;
    }, [service.cache]);
    const addError = useCallback((error) => {
        setErrors([...errors, error]);
        return error;
    }, []);
    const wrappedService = useMemo(() => {
        service.find = safeReplaceAsync(service.find.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.get = safeReplaceAsync(service.get.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.create = safeReplaceAsync(service.create.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.update = safeReplaceAsync(service.update.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.patch = safeReplaceAsync(service.patch.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.remove = safeReplaceAsync(service.remove.bind(service), sync, addError, setLoading.on, setLoading.off);
        return service;
    }, [service]);
    return {
        service: wrappedService,
        array,
        index,
        errors,
        loading,
        sync
    };
};
export const useClient = (client) => {
    return useMemo(() => client, [client]);
};
export const [ClientContextProvider, useClientContext] = createContext();
export const ClientProvider = ({ children, client }) => {
    const ctx = useClient(client);
    return _jsx(ClientContextProvider, Object.assign({ value: ctx }, { children: children }), void 0);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQU0sTUFBTSxPQUFPLENBQUE7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFBO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBa0IsTUFBTSxjQUFjLENBQUE7QUFHL0QsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsQ0FJbkMsT0FBVSxFQUNULEVBQUU7SUFDSCxNQUFNLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxHQUFHLGFBQWEsQ0FBdUI7UUFDekUsSUFBSSxFQUFFLFNBQVM7UUFDZixZQUFZLEVBQUUsMEdBQTBHO0tBQ3hILENBQUMsQ0FBQTtJQUNGLE1BQU0sUUFBUSxHQUFHLENBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUU7UUFDbEMsTUFBTSxHQUFHLEdBQU8saUJBQWlCLENBQUMsT0FBTyxDQUFPLENBQUE7UUFDaEQsT0FBTyxLQUFDLGVBQWUsa0JBQUMsS0FBSyxFQUFFLEdBQUcsZ0JBQUcsUUFBUSxZQUFtQixDQUFBO0lBQ2pFLENBQUMsQ0FBTyxDQUFBO0lBQ1IsT0FBTztRQUNOLFFBQVE7UUFDUixlQUFlO1FBQ2YsT0FBTztRQUNQLFVBQVU7S0FDVixDQUFBO0FBQ0YsQ0FBQyxDQUFBO0FBbUJELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLENBSWhDLE9BQVUsRUFDZ0IsRUFBRTtJQUM1QixJQUFJLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUM1QyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQ3pCLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDTixFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQztR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