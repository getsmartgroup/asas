import { jsx as _jsx } from "react/jsx-runtime";
import { useState, useCallback, useMemo } from 'react';
import { createContext } from '@chakra-ui/react-utils';
import { safeReplaceAsync } from '@asas-virtuais/client';
export const createServiceContext = (service) => {
    const [ContextProvider, useContext] = createContext({
        name: `Context`,
        errorMessage: `useContext: \`context\` is undefined. Seems you forgot to wrap the select components in \`<Provider />\``
    });
    const Provider = (({ children }) => {
        const ctx = useWrappedService(service);
        return _jsx(ContextProvider, Object.assign({ value: ctx }, { children: children }), void 0);
    });
    return {
        Provider,
        ContextProvider,
        service,
        useContext
    };
};
export const useWrappedService = (service) => {
    let [loading, _setLoading] = useState(false);
    const setLoading = useMemo(() => ({
        on: () => _setLoading(true),
        off: () => _setLoading(false)
    }), [loading, _setLoading]);
    const [index, setIndex] = useState(service.cache);
    const array = useMemo(() => Object.values(index), [index]);
    const [errors, setErrors] = useState([]);
    const sync = useCallback((someData) => {
        setIndex(Object.assign({}, service.cache));
        return someData;
    }, [service.cache]);
    const addError = useCallback((error) => {
        setErrors([...errors, error]);
        return error;
    }, []);
    const wrappedService = useMemo(() => {
        service.find = safeReplaceAsync(service.find.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.get = safeReplaceAsync(service.get.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.create = safeReplaceAsync(service.create.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.update = safeReplaceAsync(service.update.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.patch = safeReplaceAsync(service.patch.bind(service), sync, addError, setLoading.on, setLoading.off);
        service.remove = safeReplaceAsync(service.remove.bind(service), sync, addError, setLoading.on, setLoading.off);
        return service;
    }, [service]);
    return {
        service: wrappedService,
        array,
        index,
        errors,
        loading,
        sync
    };
};
export const useClient = (client) => {
    return useMemo(() => client, [client]);
};
export const [ClientContextProvider, useClientContext] = createContext();
export const ClientProvider = ({ children, client }) => {
    const ctx = useClient(client);
    return _jsx(ClientContextProvider, Object.assign({ value: ctx }, { children: children }), void 0);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQU0sTUFBTSxPQUFPLENBQUE7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFBO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBa0IsTUFBTSx1QkFBdUIsQ0FBQTtBQUd4RSxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxDQUluQyxPQUFVLEVBQ1QsRUFBRTtJQUNILE1BQU0sQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLEdBQUcsYUFBYSxDQUF1QjtRQUN6RSxJQUFJLEVBQUUsU0FBUztRQUNmLFlBQVksRUFBRSwwR0FBMEc7S0FDeEgsQ0FBQyxDQUFBO0lBQ0YsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtRQUNsQyxNQUFNLEdBQUcsR0FBTyxpQkFBaUIsQ0FBQyxPQUFPLENBQU8sQ0FBQTtRQUNoRCxPQUFPLEtBQUMsZUFBZSxrQkFBQyxLQUFLLEVBQUUsR0FBRyxnQkFBRyxRQUFRLFlBQW1CLENBQUE7SUFDakUsQ0FBQyxDQUFPLENBQUE7SUFDUixPQUFPO1FBQ04sUUFBUTtRQUNSLGVBQWU7UUFDZixPQUFPO1FBQ1AsVUFBVTtLQUNWLENBQUE7QUFDRixDQUFDLENBQUE7QUFtQkQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsQ0FJaEMsT0FBVSxFQUNnQixFQUFFO0lBQzVCLElBQUksQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO0lBQzVDLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FDekIsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNOLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFD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